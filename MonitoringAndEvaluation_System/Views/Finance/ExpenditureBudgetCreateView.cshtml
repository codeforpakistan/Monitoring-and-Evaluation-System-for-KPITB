@model ModelLayer.MainViewModel.CreateViewExpenditureBudgetVM
@{ViewBag.Title = "Expenditure Budget";
    List<ModelLayer.MainViewModel.GetAllExpenditureBudgetVM> _LstAllExpenditureBudget = (List<ModelLayer.MainViewModel.GetAllExpenditureBudgetVM>)ViewBag.LstAllExpenditureBudget;
}

<div class="col-xl-12">
    @using (Html.BeginForm("ExpenditureBudgetCreateView", "Finance", FormMethod.Post, new { @class = "form-horizontal" }))
    {
        <!-- START card-->
        <div class="card card-default">
            <div class="card-header">
                <div class="card-title">
                    <h4>Add Expenditure Budget</h4>
                </div>
            </div>
            <div class="card-body">
                <div class="form-group">
                    <div class="row">
                        <div class="col-lg-4">
                            <label for="sel1">Select Project </label>
                            @Html.DropDownListFor(m => m.Project_ID, new SelectList(Model.comboProjects, "ProjectID", "ProjectName"), new { @class = "select2 form-control ", @placeholder = "Select Project Type" })
                            @Html.ValidationMessageFor(m => m.Project_ID, "", new { @class = "parsley-required", @id = "spanProjectID" })
                        </div>
                        <div class="col-lg-4">
                            <label>Select Sub Project</label>
                            @Html.DropDownListFor(m => m.SubProject_ID, new SelectList(Model.comboSubProjects, "SubProjectID", "SubProjectName"), new { @class = "select2 form-control " })
                            @Html.ValidationMessageFor(m => m.SubProject_ID, "", new { @class = "parsley-required" })
                        </div>
                        <div class="col-lg-4">
                            <label for="sel1">Select Cycle/Batch</label>
                            @Html.DropDownListFor(m => m.Batch_ID, new SelectList(Model.comboBatch, "BatchID", "BatchName"), new { @class = " form-control" })
                            @Html.ValidationMessageFor(m => m.Batch_ID, "", new { @class = "parsley-required", @id = "spanBatchID" })
                        </div>
                        <div class="col-lg-4">
                            <label>Total Approved Budget *</label>
                            <input hidden id="hdnExpenditureBudget" name="hdnExpenditureBudget" />
                            <label class="col-form-label parsley-required" id="lblExpenditureBudget" name="lblExpenditureBudget" for="lblExpenditureBudget"></label>
                            @Html.TextBoxFor(model => model.ExpenditureBudget, new { @class = "form-control", @type = "number", @placeholder = "Enter Expensive Amount KPR" })
                            @Html.ValidationMessageFor(m => m.ExpenditureBudget, "", new { @class = "parsley-required", @id = "spanExpenditureBudget" })

                        </div>
                        <div class="col-lg-4">
                            <label>Total Released Budget *</label>
                            <input hidden id="hdnExpenditureBudget" name="hdnExpenditureBudget" />
                            <label class="col-form-label parsley-required" id="lblExpenditureBudget" name="lblExpenditureBudget" for="lblExpenditureBudget"></label>
                            @Html.TextBoxFor(model => model.ExpenditureBudget, new { @class = "form-control", @type = "number", @placeholder = "Enter Expensive Amount KPR" })
                            @Html.ValidationMessageFor(m => m.ExpenditureBudget, "", new { @class = "parsley-required", @id = "spanExpenditureBudget" })

                        </div>
                        <div class="col-lg-4">
                            <label>Total Expenditure Budget </label>
                            @Html.TextBoxFor(model => model.ExpenditureBudget, new { @class = "form-control", @type = "number", @placeholder = "Enter Expensive Amount KPR", @readonly = "readonly" })
                            @Html.ValidationMessageFor(m => m.ExpenditureBudget, "", new { @class = "parsley-required", @id = "spanExpenditureBudget" })

                        </div>
                    </div>
                    <br />
                    @*Procurement*@
                    <div class="card card-default" id="cardDemo1">
                        <div class="card-wrapper collapse show">
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-lg-4">
                                        <label class="col-form-label">Budget Head *</label>
                                        <input class="form-control" id="idBudgetHead" type="text" name="BudgetHead" value="" placeholder="Enter Budget Head">
                                        <span name="spanidBudgetHead" id="spanidBudgetHead" class="text-danger"></span>
                                    </div>
                                    <div class="col-lg-4">
                                        <label class="col-form-label">Approved Cost *</label>
                                        <input class="form-control" id="idApprovedCost" type="number" name="ApprovedCost" value="" placeholder="Enter Approved Cost">
                                        <span name="spanidApprovedCost" id="spanidApprovedCost" class="text-danger"></span>
                                    </div>
                                    <div class="col-lg-4">
                                        <label class="col-form-label">Expenditure Budget *</label>
                                        <input class="form-control" id="idExpenditureBudget" type="number" name="ExpenditureBudget" value="" placeholder="Enter Expenditure Budget">
                                        <span name="spanidExpenditureBudget" id="spanidExpenditureBudget" class="text-danger"></span>
                                    </div>
                                </div>
                                <br />
                                <div class="float-right"><input type="button" id="AddExpenditureBudget" value="Add Expenditure" class="btn btn-primary" /></div>
                                <br />
                                <br />
                                <table class="table table-striped" id="tblExpenditureBudget">
                                    <thead class="table-info">
                                        <tr>
                                            <th data-column-id="id" data-type="numeric">ID</th>
                                            <th data-column-id="BudgetHead">Budget Head</th>
                                            <th data-column-id="ApprovedCost">Approved Cost</th>
                                            <th data-column-id="ExpenditureBudget">Expenditure Budget</th>
                                            <th data-column-id="action">Action</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </div>
        <!-- END card-->
        <div class="card-footer">
            <div class="clearfix">
                <div class="float-left">
                    <div class="checkbox c-checkbox">
                        <label>
                        </label>
                    </div>
                </div>
                <div class="float-right">
                    <button class="btn-lg btn-success" type="submit" id="btnCreate"> Create</button>
                </div>

            </div>
        </div>
    }
</div>

<div id="ProjectComboLink"
     url-Val="@Url.Action("ClickProjectComboBox", "Common")">
</div>


@section Scripts{
    <script src="~/Content/Template/js/CustomCode.js"></script>

    @*<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.6.4/js/bootstrap-datepicker.js" type="text/javascript"></script>
    <script src="~/Content/Template/vendor/bootstrap-colorpicker/dist/js/bootstrap-colorpicker.js"></script>*@

    <script>

        $("#AddExpenditureBudget").click(function () {
            debugger;
            if ($('#idBudgetHead').val() == "") {
                $('#spanidBudgetHead').text('Budget Head should not be blank');
                $('#spanidBudgetHead').show();
                $('#ididBudgetHead').focus();
                return true;
            }
            if ($('#idApprovedCost').val() == "") {
                $('#spanidApprovedCost').text('Budget Head should not be blank');
                $('#spanidApprovedCost').show();
                $('#idApprovedCost').focus();
                return true;
            }
            if ($('#idExpenditureBudget').val() == "") {
                $('#spanidExpenditureBudget').text('Budget Head should not be blank');
                $('#spanidExpenditureBudget').show();
                $('#idExpenditureBudget').focus();
                return true;
            }
           
            var trcount = $("#tblExpenditureBudget tr").length;
            $("#tblExpenditureBudget").append("<tr>  <td>" + trcount + "</td>  <td>" + $("#idBudgetHead").val() + "</td> <td>" + $("#idApprovedCost").val() + "</td> <td>" + $("#idExpenditureBudget").val() + "</td> <td><a href='javascript:void(0);' class='remCF2'  onClick ='RemoveDemerits(this);'>Remove</a></td>    </tr>");
            $("#idBudgetHead").val('');
            $("#idApprovedCost").val('');
            $("#idExpenditureBudget").val('');
        });

        function RemoveDemerits(row) {
            $(row).parent().parent().remove();
        }

        $("#idRiskName").on('change', function () {
            debugger;
            if ($('#idRiskName').val() != "") {
                $('#spanidRiskName').hide();
                return true;
            }
        });
        $("#idRiskMitigation").on('change', function () {
            debugger;
            if ($('#idRiskMitigation').val() != "") {
                $('#spanidRiskMitigation').hide();
                return true;
            }
        });
        $("#idRiskStatus").on('change', function () {
            debugger;
            if ($('#idRiskStatus').val() != "") {
                $('#spanidRiskStatus').hide();
                return true;
            }
        });




            $("#btnCreate").click(function (e) {
                e.preventDefault();

            debugger;

            if ($('#ProjectName').val() == '') {
                $('#spanProjectName').text('Please Fill This Field');
                $('#ProjectName').focus();
                return true;
            }



            var formAllData = new FormData();


            formAllData.append('txtProjectName', $("#ProjectName").val());

            //Risk
            var RiskRows = new Array();   //ArrayList
            $('#tblRisk tr').each(function ()
            {
                if ($(this).find('td:eq(0)').text() != '')
                {
                    //Risk
                    debugger;
                    $RiskRow = $(this).find('td:eq(0)').text() +
                                "|" + $(this).find('td:eq(1)').text() +
                                "|" + $(this).find('td:eq(2)').attr('id');
                    RiskRows.push($RiskRow);
                }
            });
            formAllData.append("_RiskRows", RiskRows);

            var urllink = '@Url.Action("ProjectCreate", "Project")'
            $.ajax({
                url: urllink,
                type: "POST",
                contentType: false, // Not to set any content header
                processData: false, // Not to process data
                data: formAllData,
                success: function (result) {
                    debugger;
                    if (result == 'false') {
                       var route = '@Url.Action("ProjectCreate", "Project")'
                         window.location.href = route;
                    }
                    else if (result == 'true') {
                         var route = '@Url.Action("ProjectView", "Project")'
                         window.location.href = route;
                    }

                },
                error: function (err) {
                    //For Failure notification
                    alert(err.statusText);
                }
            });

        });



    </script>
}
