@model ModelLayer.MainViewModel.EditRecruitedHRVM
@{
    ViewBag.Title = "Edit Recruited HR";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section Styles{
}

<div class="row">
    <div class="col-xl-12">
        <!-- START card-->
        <div class="card card-default">
            <div class="card-header">
                <div class="card-title">
                    <h4> Edit Recruited HR</h4>
                </div>
            </div>
            <div class="card-body">
                <div class="form-group">
                    @using (Html.BeginForm("RecruitedHREdit", "Project", FormMethod.Post, new { @class = "form-horizontal" }))
                    {
                        @Html.HiddenFor(m => m.RecruitedHRID)
                    <div class="row">
                        <div class="col-lg-4">
                            <label>Select Project </label>
                            @Html.DropDownListFor(m => m.Project_ID, new SelectList(Model.comboProjects, "ProjectID", "ProjectName"), new { @class = "select2 form-control " })
                            @Html.ValidationMessageFor(m => m.Project_ID, "", new { @class = "parsley-required" })
                        </div>
                        @*<div class="col-lg-4">
            <label>Select Sub Project</label>
            @Html.DropDownListFor(m => m.SubProject_ID, new SelectList(Model.comboSubProjects, "SubProjectID", "SubProjectName"), new { @class = "select2 form-control " })
            @Html.ValidationMessageFor(m => m.SubProject_ID, "", new { @class = "parsley-required" })
        </div>*@
                        <div class="col-lg-4">
                            <label>Select Cycle/Batch</label>
                            @Html.DropDownListFor(m => m.Batch_ID, new SelectList(Model.comboBatch, "BatchID", "BatchName"), new { @class = " form-control" })
                            @Html.ValidationMessageFor(m => m.Batch_ID, "", new { @class = "parsley-required" })
                        </div>
                        <div class="col-lg-4">
                            <label class="">No of Recruited -HR *</label>
                            <input hidden id="hdnRemaningHR" name="hdnRemaningHR"></input>
                            <label class="col-form-label parsley-required" id="lblRemaningHR" name="lblRemaningHR" for="lblRemaningHR"></label>
                            @Html.TextBoxFor(model => model.RecruitedHR, new { @class = "form-control", @type = "number", @placeholder = "Enter No of Recruited -HR" })
                            @Html.ValidationMessageFor(m => m.RecruitedHR, "", new { @class = "parsley-required", @id = "spanRecruitedHR" })
                        </div>
                     
                    </div>
                        <div class="row">

                            <div class="col-lg-4">
                                <label class="col-form-label">HR From Date *</label>
                                <input type="text" data-provide="datepicker" class="form-control date-Future datepicker" name="RecruitedFromHRDate" id="RecruitedFromHRDate" value="@Model.RecruitedFromHRDate.ToShortDateString()">


                            </div>
                            <div class="col-lg-4">
                                <label class="col-form-label">HR To Date *</label>
                                <input type="text" data-provide="datepicker" class="form-control date-Future datepicker" name="RecruitedToHRDate" id="RecruitedToHRDate" value="@Model.RecruitedToHRDate.ToShortDateString()">

                            </div>
                            <div class="col-lg-4">
                                <label class="col-form-label">Remarks *</label>
                                @Html.TextBoxFor(model => model.Remarks, new { @class = "form-control", @placeholder = "Remarks Optional" })
                                @Html.ValidationMessageFor(m => m.Remarks, "", new { @class = "parsley-required" })

                            </div>
                        </div>

                        <br />
                        <div class="required">* Required fields</div>

                        <hr />
                        <div class="float-right">
                            <button class="btn btn-primary" type="submit">Update</button>
                        </div>
                        <br />
                    }
                </div>
            </div>
        </div>
        <!-- END card-->
    </div>
</div>


<div id="ProjectComboLink"
     url-Val="@Url.Action("ClickProjectComboBox", "Common")">
</div>

@section Scripts{
    <script src="~/Content/Template/js/CustomCode.js"></script>

    <script>


        $(document).ready(function ()
        {
            $('.datepicker').datepicker();
        });

        $("#RecruitedFromHRDate").on('change', function () {
            DateCompare();
        });

        $("#RecruitedToHRDate").on('change', function () {
            DateCompare();
        });

        function DateCompare() {
            var _RecruitedToHRDate = $('#RecruitedToHRDate').val();

            var _RecruitedFromHRDate = $('#RecruitedFromHRDate').val();
            if (_RecruitedToHRDate != '') {
                if (_RecruitedFromHRDate > _RecruitedToHRDate)
                {
                    $("#spanRecruitedFromHRDate").text("From-HRDate should not be greater then  To-HRDate")
                    return false;
                }
                else
                {
                    $("#spanRecruitedFromHRDate").text("")
                    return false;
                }
            }
        }
         $("#Project_ID").on('change', function () {
            var _Project_ID = $(this).find("option:selected").val();

                $.ajax({
                     type: 'POST',
                     url: '@Url.Action("ClickProjectComboBox", "Common")',
                     dataType: 'json',
                    data: { Project_ID: _Project_ID },  // Same Parameter with Action
                    success: function (BatchLst) {
                        $("#Batch_ID").empty();
                        if (BatchLst == 0 || BatchLst ==null) {
                            $("#Batch_ID").prop("disabled", true);
                            $("#Batch_ID").append('<option value="' + 0 + '">' +
                                "Please Select Batch" + '</option>');
                        } else {
                            $("#Batch_ID").prop("disabled", false);
                            $.each(BatchLst, function (i, Aqib) {
                                $("#Batch_ID").append('<option value="' + Aqib.BatchID + '">' +
                                    Aqib.BatchName + '</option>');
                            });
                        }
                 },
                 error: function (ex) {
                     console.log('Failed to Retrieve Batch Data:  ' + ex);
                 }
                });//Ajax_End
        });

    </script>
}