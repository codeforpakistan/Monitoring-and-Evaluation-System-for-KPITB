@using system.Linq;
@model ModelLayer.MainViewModel.RolePermissionWithRolVM
@{
    ViewBag.Title = "RolePermissions";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>RolePermissions</h2>


@using (Html.BeginForm("RolePermissions", "Role", FormMethod.Post, new { @class = "form-horizontal" }))
{
<div class="container-fluid">


    <div class="form-row">
        <div class="col-lg-5">
            <label for="validationServer04">Select Role</label>
            @Html.DropDownListFor(m => m.RoleID, new SelectList(Model.comboRole, "RoleID", "RoleName"), "Please Select Role", new {  @class = "select2 form-control ", @placeholder = "Select Role" })
            @Html.ValidationMessageFor(m => m.RoleID, "", new { @class = "parsley-required" })
        </div>
    </div>  
    <br />
    <button class="btn btn-primary" type="submit" id="btnSubmit">Submit</button>

    <!-- START row-->
    <div class="row">
        <!--=============================OUTER_START==============================-->
        @{
            var parentGroup = (from p in Model.LstRolePermission select new { p.ParentMenuID, p.ParentMenuName, p.IsChecked,p.HasParent }).Distinct();

            //var parentGroup = Model.LstRolePermission.Distinct().ToList();
            foreach (var Parent in parentGroup)
            {
                <div class="col-lg-12">
                    <!-- START card-->
                    <div class="card card-default" id="cardDemo1">

                        <div class="card-header H-@Parent.ParentMenuID">
                            <!--CheckBox-->
                            <div class="checkbox c-checkbox">
                                <label>
                                    @if (Parent.HasParent)
                                    {
                                        <input type="checkbox" id="@Parent.ParentMenuID" name="@Parent.ParentMenuID" class="chkbox" checked="checked"> <!--Parent-->
                                        <span class="fa fa-check"></span>
                                    }
                                    else
                                    {
                                        <input type="checkbox" id="@Parent.ParentMenuID" name="@Parent.ParentMenuID" class="chkbox" />
                                        <span class="fa fa-check"></span>
                                    }
                                </label>
                            </div>
                            <!--Title-->
                            @Parent.ParentMenuName

                            <!--Mnimize-->
                            <a class="float-right" href="#p-@Parent.ParentMenuID" data-tool="card-collapse" data-toggle="tooltip" title="Collapse Card">
                                <em class="fa fa-minus"></em>
                            </a>
                        </div>

                        <!--Body1-->
                        <div class="card-wrapper collapse show" id="p-@Parent.ParentMenuID">
                            <div class="card-body ">

                                <div class="row">
                                    <!--=============================INNER_START==============================-->
                                    @{
                                        var childGroup = (from cc in Model.LstRolePermission where cc.ParentMenuID == Parent.ParentMenuID select new { cc.ChildMenuID, cc.ChildMenuName, cc.IsChecked,cc.HasChild }).Distinct();
                                        foreach (var child in childGroup)
                                        {
                                            <div class="col-lg-4">
                                                <!-- START card-->
                                                <div class="card card-default" id="cardDemo2">

                                                    <div class="card-header i-@child.ChildMenuID">
                                                        <!--CheckBox-->
                                                        <div class="checkbox c-checkbox">
                                                            <label>
                                                                @if (child.HasChild)
                                                                {
                                                                    <input type="checkbox" class="chkPage p-@Parent.ParentMenuID" id="i-@child.ChildMenuID" checked="checked" />
                                                                    <span class="fa fa-check"></span>
                                                                }
                                                                else
                                                                {
                                                                    <input type="checkbox" class="chkPage p-@Parent.ParentMenuID" id="i-@child.ChildMenuID" />
                                                                    <span class="fa fa-check"></span>
                                                                }

                                                                <input type="hidden" class="IsChecked i-@child.ChildMenuID" name="LstRolePermission[@child.ChildMenuID].IsChecked" value="@child.IsChecked" />
                                                                <input type="hidden" name="LstRolePermission[@child.ChildMenuID].ChildMenuID" value="@child.ChildMenuID" />
                                                            </label>
                                                        </div>
                                                        <!--Title-->
                                                        @child.ChildMenuName

                                                        <!--Close-->
                                                        <a class="float-right" href="#i-@child.ChildMenuID" data-tool="card-collapse" data-toggle="tooltip" title="Collapse Card">
                                                            <em class="fa fa-minus"></em>
                                                        </a>
                                                    </div>

                                                    <!--Body-->
                                                    <div class="card-wrapper collapse show">
                                                        <div class="card-body">
                                                            <!--==========SUBINNER_START========-->
                                                            <div class="card card-default">
                                                                <!-- ROW-->
                                                                @{
                                                                    var subChildGroup = (from sc in Model.LstRolePermission where sc.ParentMenuID == Parent.ParentMenuID && sc.ChildMenuID == child.ChildMenuID select new { sc.SubChildMenuID, sc.SubChildName, sc.IsChecked, sc.HasSubChild }).Distinct();
                                                                    foreach (var subChild in subChildGroup)
                                                                    {
                                                                        <div class="table-responsive">
                                                                            <table class="table table-striped table-bordered table-hover">
                                                                                <tbody>
                                                                                    <tr>
                                                                                        <td>
                                                                                            <div class="checkbox c-checkbox H-@Parent.ParentMenuID">
                                                                                                <label class="m-0">
                                                                                                    <input type="checkbox" class="chkp i-@subChild.SubChildMenuID">
                                                                                                    @if (@subChild.HasSubChild)
                                                                                                    {
                                                                                                        <label>
                                                                                                            <input type="checkbox" class="chkp i-@subChild.SubChildMenuID" checked="checked" />
                                                                                                        </label>
                                                                                                        <input type="hidden" class="chkOp i-@subChild.SubChildMenuID" name="LstRolePermission[@subChild.SubChildMenuID].HasSubChild" value="true" />
                                                                                                        <span class="fa fa-check"></span>
                                                                                                    }
                                                                                                    else
                                                                                                    {
                                                                                                        <label>
                                                                                                            <input type="checkbox" class="chkp i-@subChild.SubChildMenuID" />
                                                                                                        </label>
                                                                                                        <input type="hidden" class="chkOp i-@subChild.SubChildMenuID" name="LstRolePermission[@subChild.SubChildMenuID].HasSubChild" value="false" />
                                                                                                        <span class="fa fa-check"></span>
                                                                                                    }
                                                                                                </label>
                                                                                            </div>
                                                                                            <input type="hidden" class="IsChecked i-@subChild.SubChildMenuID" name="RolePermissionVM[@subChild.SubChildMenuID].IsChecked" value="LstRolePermission[@subChild.SubChildMenuID].IsChecked" />
                                                                                            <input type="hidden" name="RolePermissionVM[@subChild.SubChildMenuID].SubChildMenuID" value="@subChild.SubChildMenuID" />
                                                                                        </td>
                                                                                        <td>@subChild.SubChildName</td>
                                                                                    </tr>
                                                                                </tbody>

                                                                            </table>
                                                                        </div>
                                                                    }
                                                                }
                                                            </div>
                                                            <!--==========SUBINNER_END========-->

                                                        </div>
                                                    </div>
                                                </div>
                                                <!-- END card-->
                                            </div>
                                        }
                                    }
                                    <!--=============================INNER_END==============================-->
                                </div>
                            </div>
                        </div>



                    </div>
                    <!-- END card-->
                </div>
            }
        }
        <!--=============================OUTER_END==============================-->
    </div>
    <!-- END row-->
</div>
    }



    @section Scripts {

        <script type="text/javascript">
            $(document).ready(function () {
                $('#1').addClass('active open');
                $('#1 div.collapsible-body').attr('style', 'display: block;');
                $('#2').addClass('active');
                $('#2 a').addClass('active');

                $('input[type="checkbox"]').click(function (e) {

                    var $this = $(this),
                        $thisClass = $this.attr('class'),
                        $thisVal = $this.is(':checked'),
                        $thisID = $this.attr('id');

                    if ($thisClass == "chkbox") {

                        $('div.child-' + $thisID).find('input[type="checkbox"]')
                            .attr('checked', 'checked')
                            .prop('checked', $thisVal);

                        $('div.child-' + $thisID).find('input.chkOp').attr('value', $thisVal);

                        $('div.child-' + $thisID).find('input.IsChecked').attr('value', $thisVal);

                    } else if ($this.hasClass("chkPage")) {
                        $('input[type="checkbox"].' + $thisID).attr('checked', 'checked').prop('checked', $thisVal);
                        $('input[type="hidden"].' + $thisID).attr('value', $thisVal);
                        var $arr = $thisClass.toString().split(' ');
                        // chkPage id >>> 2 classes

                        $thisClass = $arr[1];
                        if ($thisVal) {
                            $('.' + $arr[1]).find('input.chkbox').attr('checked', 'checked').prop('checked', $thisVal);
                            $('.' + $arr[1].replace('p', 'H')).find('input.chkbox').attr('checked', 'checked').prop('checked', $thisVal);

                        } else {

                            //var selectedSiblings = $('.' + $arr[1]).find('input.chkPage:checked').length;
                            var selectedSiblings = ($('input.' + $arr[1] + ':checked').length);

                            if (selectedSiblings == 0) {
                                $('.' + $arr[1]).find('input.chkbox').removeAttr('checked').prop('checked', $thisVal);
                                $('.' + $arr[1].replace('p', 'H')).find('input.chkbox').attr('checked', 'checked').prop('checked', $thisVal);

                            }
                        }
                    } else if ($this.hasClass("chkp")) {
                        var $arr = $thisClass.toString().split(' ');
                        $thisClass = 'chkp.' + $arr[1];
                        var selectedSiblings = ($('input.' + $thisClass + ':checked').length);
                        if ($thisVal && selectedSiblings == 1) {
                            $('td.' + $arr[1]).find('input.chkPage').attr('checked', 'checked').prop('checked', $thisVal);
                            $('td.' + $arr[1]).find('input.IsChecked').attr('value', $thisVal);
                            $this.closest('td').find('input.chkbox').attr('checked', 'checked').prop('checked', $thisVal);
                        } else if (!$thisVal && selectedSiblings == 0) {
                            $this.parents('td').siblings().find('input.chkPage').attr('checked', 'checked').prop('checked', $thisVal);
                            $this.parents('td').siblings().find('input.IsChecked').attr('value', $thisVal);
                            if ($this.find('input.chkPage:checked').length == 0)
                                $this.find('input.chkbox').attr('checked', 'checked').prop('checked', $thisVal);
                        }
                    }
                });

            });

            $("#RoleID").change(function (e) {
                e.preventDefault();
                var _RoleID = $("#RoleID").val();
                var route = '@Url.Action("GetRoleBasePermissionCombo","Role")?RoleID=' + _RoleID
                window.location.href = route;
            });


        </script>
    }







