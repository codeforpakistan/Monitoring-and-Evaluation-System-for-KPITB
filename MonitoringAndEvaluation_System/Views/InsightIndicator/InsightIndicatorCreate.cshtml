@model ModelLayer.MainViewModel.CreateInsightIndicatorVM
@{
    ViewBag.Title = "Insight Indicator Create";
    //List<ModelLayer.MainViewModel.GetAllIssue> _LstAllIssues = (List<ModelLayer.MainViewModel.GetAllIssue>)ViewBag.LstAllIssues;
}

<!-- START row-->
<div class="row">
    <div class="col-xl-12">
        @using (Html.BeginForm("InsightIndicatorCreate", "InsightIndicator", FormMethod.Post, new { @class = "form-horizontal" }))
        {
            <!-- START card-->
            <div class="card card-default">
                <div class="card-header">
                    <div class="card-title"><h4>Create Insight Indicator </h4></div>
                </div>
                <div class="card-body">
                    <div class="form-group">
                        <div class="row">
                            <div class="col-lg-3">
                                <label class="col-form-label" for="sel1">Select Project </label>
                                @Html.DropDownListFor(m => m.Project_ID, new SelectList(Model.comboProjects, "ProjectID", "ProjectName"), new { @class = "select2 form-control ", @placeholder = "Select Project Type" })
                                @Html.ValidationMessageFor(m => m.Project_ID, "", new { @class = "parsley-required", @id = "spanProjectID" })
                            </div>
                            <div class="col-lg-3">
                                <label class="col-form-label" for="sel1">Select Sub Project</label>
                                @Html.DropDownListFor(m => m.SubProject_ID, new SelectList(Model.comboSubProjects, "SubProjectID", "SubProjectName"), new { @class = " form-control" })
                                @Html.ValidationMessageFor(m => m.SubProject_ID, "", new { @class = "parsley-required", @id = "spanSubProjectID" })
                            </div>
                            <div class="col-lg-3">
                                <label class="col-form-label" for="sel1">Select Cycle/Batch</label>
                                @Html.DropDownListFor(m => m.Batch_ID, new SelectList(Model.comboBatch, "BatchID", "BatchName"), new { @class = " form-control" })
                                @Html.ValidationMessageFor(m => m.Batch_ID, "", new { @class = "parsley-required", @id = "spanBatchID" })
                            </div>
                            <div class="col-lg-3">
                                <label class="col-form-label">Insight IndicatorName</label>
                                @Html.TextBoxFor(model => model.InsightIndicatorName, new { @class = "form-control", @type = "text" })
                                @Html.ValidationMessageFor(m => m.InsightIndicatorName, "", new { @class = "parsley-required", @id = "spanInsightIndicatorName" })
                            </div>
                        </div>

                        <br />
                        <div class="required float-left">* Required fields</div>
                        <br />

                    </div>
                    <div class="card card-default" id="cardDemo1">
                        <div class="card-wrapper collapse show">
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-lg-4">
                                        <label class="col-form-label">Insight Indicator Field  *</label>
                                        <input class="form-control" id="idInsightIndicatorField" type="text" name="InsightIndicatorField" value="" placeholder="Enter Insight Indicator Field Name">
                                        <span name="spanidInsightIndicatorField" id="spanidInsightIndicatorField" class="text-danger"></span>
                                    </div>
                                    <div class="col-lg-4">
                                        <label class="col-form-label">Insight Indicator DataType *</label>
                                        @Html.DropDownListFor(m => m.InsightIndicatorDataType_ID, new SelectList(Model.comboInsightIndicatorDataTypes, "InsightIndicatorDataTypeID", "InsightIndicatorDataType"), "Select Indicator Value Type", new { @class = " form-control ", @id = "IndicatorDataType_ID", @name = "IndicatorDataType_ID" })
                                        @Html.ValidationMessageFor(m => m.InsightIndicatorDataType_ID, "", new { @class = "parsley-required" })
                                        <span name="spanidIndicatorName" id="spanidIndicatorDataType_ID" class="text-danger"></span>

                                    </div>
                                    <div class="col-lg-3">
                                        <label class="col-form-label text-white"> Add DataType btn</label>

                                        <div class="float-right"><input type="button" id="AddInsightIndicatorField" value=" Add Insight Indicator Field " class="btn btn-primary" /></div>
                                    </div>
                                </div>
                                <br />

                                <br />
                                <br />
                                <table class="table table-striped" id="tblInsightIndicatorField">
                                    <thead class="table-info">
                                        <tr>
                                            <th data-column-id="id" data-type="numeric">ID</th>
                                            <th data-column-id="InsightIndicatorField">InsightIndicator Field Name</th>
                                            <th data-column-id="InsightIndicatorDataType">Insight Indicator DataType</th>
                                            <th data-column-id="action">Action</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                    <div class="float-right">
                        <button class="btn btn-success" type="submit" id="btnCreate"> Create</button>
                    </div>
                </div>
            </div>
            <!-- END card-->
        }
    </div>
</div>

<div id="ProjectComboLink"
     url-Val="@Url.Action("ClickProjectComboBox", "Common")">
</div>

@section Scripts{
    <script src="~/Content/Template/js/CustomCode.js"></script>
    <script>

        $("#AddInsightIndicatorField").click(function () {
            debugger;
            if ($('#idInsightIndicatorField').val() == "") {
                $('#spanidInsightIndicatorField').text('InsightIndicator Field Name should not be blank');
                $('#spanidInsightIndicatorField').show();
                $('#idInsightIndicatorField').focus();
                return true;
            }
            if ($('#IndicatorDataType_ID').val() == "") {
                $('#spanidIndicatorDataType_ID').text('Select Data type of Insight Indicator Filed');
                $('#spanidIndicatorDataType_ID').show();
                $('#IndicatorDataType_ID').focus();
                return true;
            }

            var trcount = $("#tblInsightIndicatorField tr").length;
            $("#tblInsightIndicatorField").append("<tr>  <td>" + trcount + "</td>  <td>" + $("#idInsightIndicatorField").val() + "</td> <td>" + $("#IndicatorDataType_ID").val() + "</td>  <td><a href='javascript:void(0);' class='remCF2'  onClick ='RemoveDemerits(this);'>Remove</a></td>    </tr>");
            $("#idInsightIndicatorField").val('');
            $("#idInsightIndicatorField").val('');
           
        });

        function RemoveDemerits(row) {
            $(row).parent().parent().remove();
        }




            $("#btnCreate").click(function (e) {
                e.preventDefault();

            var formAllData = new FormData();

                formAllData.append('txtProject_ID', $("#Project_ID").val());
                formAllData.append('txtSubProject_ID', $("#SubProject_ID").val());
                formAllData.append('txtBatch_ID', $("#Batch_ID").val());
                formAllData.append('txtInsightIndicatorName', $("#InsightIndicatorName").val());
                
            //Expenditure
            var InsightIndicatorFieldRows = new Array();   //ArrayList
                $('#tblInsightIndicatorField tr').each(function ()
            {
                if ($(this).find('td:eq(0)').text() != '')
                {
                    //InsightIndicatorField
                    debugger;
                    $InsightIndicatorFieldRow = $(this).find('td:eq(0)').text() +
                        "|" + $(this).find('td:eq(1)').text() +
                        "|" + $(this).find('td:eq(2)').text();
                    InsightIndicatorFieldRows.push($InsightIndicatorFieldRow);
                }
            });
                formAllData.append("_InsightIndicatorFieldRows", InsightIndicatorFieldRows);

            var urllink = '@Url.Action("InsightIndicatorCreate", "InsightIndicator")'
            $.ajax({
                url: urllink,
                type: "POST",
                contentType: false, // Not to set any content header
                processData: false, // Not to process data
                data: formAllData,
                success: function (result) {
                    debugger;
                    if (result == 'false') {
                       var route = '@Url.Action("InsightIndicatorCreate", "InsightIndicator")'
                         window.location.href = route;
                    }
                    else if (result == 'true') {
                         var route = '@Url.Action("InsightIndicatorView", "InsightIndicator")'
                         window.location.href = route;
                    }

                },
                error: function (err) {
                    //For Failure notification
                    alert(err.statusText);
                }
            });

        });
    </script>
}
