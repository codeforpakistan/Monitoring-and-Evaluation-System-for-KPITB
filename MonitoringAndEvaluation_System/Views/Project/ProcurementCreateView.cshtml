@model ModelLayer.MainViewModel.CreateProcurementVM
@{
    ViewBag.Title = "Add New Procurement";
    List<ModelLayer.MainViewModel.GetAllProcurementVM> _LstAllProcurement = (List<ModelLayer.MainViewModel.GetAllProcurementVM>)ViewBag.LstAllProcurement;
}
@*@section Styles{
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.6.4/css/bootstrap-datepicker.css" type="text/css" />
    }*@
<!-- START row-->
<div class="row">
    <div class="col-xl-12">

        <!-- START card-->
        <div class="card card-default">
            <div class="card-header">
                <div class="card-title">
                    <h4>Add New Procurement</h4>
                </div>

            </div>
            <div class="card-body">
                <!--Foum-->
                @using (Html.BeginForm("ProcurementCreateView", "Project", FormMethod.Post, new { @class = "form-horizontal" }))
                {
                    <div class="form-group">
                        <div class="row">
                            <div class="col-lg-4">
                                <label for="sel1">Select Project </label>
                                @Html.DropDownListFor(m => m.Project_ID, new SelectList(Model.comboProjects, "ProjectID", "ProjectName"), new { @class = "select2 form-control ", @placeholder = "Select Project " })
                                @Html.ValidationMessageFor(m => m.Project_ID, "", new { @class = "parsley-required" })
                            </div>
                            <div class="col-lg-4">
                                <label>Select Sub Project</label>
                                @Html.DropDownListFor(m => m.SubProject_ID, new SelectList(Model.comboSubProjects, "SubProjectID", "SubProjectName"), new { @class = "select2 form-control " })
                                @Html.ValidationMessageFor(m => m.SubProject_ID, "", new { @class = "parsley-required" })
                            </div>
                            @*<div class="col-lg-4">
                                    <label>Select Cycle/Batch</label>
                                    @Html.DropDownListFor(m => m.Batch_ID, new SelectList(Model.comboBatch, "BatchID", "BatchName"), new { @class = " form-control" })
                                    @Html.ValidationMessageFor(m => m.Batch_ID, "", new { @class = "parsley-required" })
                                </div>*@
                            <div class="col-lg-4">
                                <label class="col-form-label">Procurement Header</label>
                                @Html.DropDownListFor(m => m.PlannedProcurement_ID, new SelectList(Model.comboProcurementHead, "PlannedProcurementID", "ProcrumetHeader"), new { @class = " form-control" })
                                @Html.ValidationMessageFor(m => m.PlannedProcurement_ID, "", new { @class = "parsley-required" })
                            </div>
                        </div>
                        <div class="row">


                            <div class="col-lg-4">
                                <label class="col-form-label">Aproved Per Item Cost</label>
                                <input hidden id="hdnRemainingProcurement" name="hdnRemainingProcurement">
                                <div>
                                    <label id="lblRemainingProcurement" name="lblRemainingProcurement" for="lblRemainingProcurement" class="form-control">0</label>
                                </div>



                            </div>


                            <div class="col-lg-4">
                                <label class="col-form-label">No of Items *</label>
                                <label class="col-form-label parsley-required" id="lblRemainingProcurement"></label>
                                <input hidden id="hdnRemainingProcurement" name="hdnRemainingProcurement" type="number" />
                                @Html.TextBoxFor(model => model.AchievedProcurement, new { @class = "form-control", @type = "number", @placeholder = "Enter No of Procurement" })
                                @Html.ValidationMessageFor(m => m.AchievedProcurement, "", new { @class = "parsley-required", @id = "spanAchievedProcurement" })
                            </div>
                            <div class="col-lg-4">
                                <label class="col-form-label">Actual Cost Per Item *</label>
                                <label class="col-form-label parsley-required" id="lblRemainingProcurement"></label>
                                @Html.TextBoxFor(model => model.ActualCostPerItem, new { @class = "form-control", @type = "number", @placeholder = "Enter Actual Cost Per Item " })
                                @Html.ValidationMessageFor(m => m.ActualCostPerItem, "", new { @class = "parsley-required", @id = "spanActualCostPerItem" })
                            </div>



                        </div>
                        <div class="row">

                            <div class="col-lg-4">
                                <label class="col-form-label">Total Cost *</label>
                                <label class="col-form-label parsley-required" id="lblRemainingProcurement"></label>
                                @Html.TextBoxFor(model => model.TotalCost, new { @class = "form-control", @type = "number", @placeholder = "Enter No of Procurement", })
                                @Html.ValidationMessageFor(m => m.TotalCost, "", new { @class = "parsley-required", @id = "spanTotalCost" })
                            </div>
                            <div class="col-lg-4">
                                <label class="col-form-label">Procurement TimeLine *</label>
                                @Html.TextBoxFor(model => model.ProcurementDate, new { @class = "form-control", @type = "date", @id = "ProcurementDate" })
                                @Html.ValidationMessageFor(m => m.ProcurementDate, "", new { @class = "parsley-required", @id = "spanProcurementDate" })
                            </div>
                            <div class="col-lg-4">
                                <label class="col-form-label">Remarks</label>
                                @Html.TextBoxFor(model => model.Remarks, new { @class = "form-control", @type = "text", @placeholder = "Enter Remarks", })
                                @Html.ValidationMessageFor(m => m.Remarks, "", new { @class = "parsley-required", @id = "spanidRemarks" })
                            </div>
                        </div>

                        <br />
                        <div class="required float-left">* Required fields</div>
                        <div class="float-right">
                            <button class="btn btn-primary" type="submit">Save</button>
                        </div>
                        <br />



                    </div>
                }
                <!--Table-->
                <!-- START card-->
                <div class="card card-default">
                    <div class="card-body">
                        <form class="form-horizontal">
                            <div class="form-row ">
                                <div class="col-lg-3">
                                    <label for="sel1">Search By Project</label>
                                    <input class="select2 form-control" type="text" placeholder="Select Project Name">
                                </div>
                                <div class="col-lg-3">
                                    <label for="sel1">Search By Batch</label>
                                    <input class="select2 form-control" type="text" placeholder="Select Batch Name">
                                </div>
                                <div class="col-lg-3">
                                    <label for="sel1">Search By Date</label>
                                    @Html.TextBoxFor(model => model.ProcurementDate, new { @class = "select2 form-control", @type = "date", @id = "ProcurementDate", @placeholder = "Enter No of Recruited -HR" })
                                    @Html.ValidationMessageFor(m => m.ProcurementDate, "", new { @class = "parsley-required", @id = "spanProcurementDate" })
                                </div>

                                <div class="col-lg-1">
                                    <label for="sel1" style="color:transparent">]</label>
                                    <button class="btn btn-primary form-control" type="submit" id="btnSubmit">Search</button>
                                </div>
                                <div class="col-lg-1">
                                    <label for="sel1" style="color:transparent">]</label>
                                    <button class="btn btn-green form-control" type="submit" id="btnSubmit">Clear</button>
                                </div>
                            </div>

                        </form>
                    </div>
                </div>
                <!-- END card-->
                <div class="card card-default">
                    <div class="row">
                        <div class="col-lg-12">
                            <div class="card">
                                <div class="card-body">
                                    <table class="table table-striped my-4 w-100 table-hover" id="datatable2">
                                        <thead>
                                            <tr>

                                                <th>
                                                    ID
                                                </th>

                                                <th>
                                                    Procurement Head
                                                </th>
                                                <th>
                                                    Actual Cost Per Item
                                                </th>
                                                <th>
                                                    No of Item
                                                </th>
                                                <th>
                                                    Total Cost
                                                </th>
                                                <th>
                                                    Remarks
                                                </th>
                                                <th>
                                                    Action
                                                </th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @{
                                                foreach (var item in _LstAllProcurement)
                                                {
                                                    <tr>
                                                        @Html.HiddenFor(m => item.AchievedProcurementID)
                                                        <td>
                                                            @item.ID
                                                        </td>

                                                        <td>
                                                            @item.AchievedProcurement
                                                        </td>
                                                        <td>
                                                            @item.AchievedProcurement
                                                        </td>
                                                        <td>
                                                            @item.AchievedProcurement
                                                        </td>

                                                        <td>
                                                            @item.ProcurementFromDate.ToShortDateString()
                                                        </td>
                                                        <td>
                                                            @item.Remarks
                                                        </td>
                                                        <td>
                                                            @Html.ActionLink("Edit", "ProcurementEdit", new { AchievedProcurementID = Utility.Encryption.EncryptURL(Convert.ToString(item.AchievedProcurementID)) }, new { @class = "mb-1 btn btn-warning" })
                                                        </td>
                                                    </tr>
                                                }
                                            }

                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

        </div>
        <!-- END card-->

    </div>
</div>

@section Scripts{

    <script>
       $(document).ready(function ()
        {

        });

        $("#Project_ID").on('change', function () {
            var _Project_ID = $(this).find("option:selected").val();

                $.ajax({
                     type: 'POST',
                     url: '@Url.Action("ClickProjectComboBox", "Common")',
                     dataType: 'json',
                    data: { ProjectID: _Project_ID },  // Same Parameter with Action
                    success: function (SubProjectLst) {
                        debugger;
                        $("#SubProject_ID").empty();
                        $("#PlannedProcurement_ID").empty();
                        if (SubProjectLst.comboSubProjects.length <= 1 || SubProjectLst.comboSubProjects == null) {
                            $("#SubProject_ID").prop("disabled", true);
                            $("#SubProject_ID").append('<option value="' + 0 + '">' +
                                "Please Select SubProject" + '</option>');

                            if (SubProjectLst.comboProcurementHeads.length <= 1 || SubProjectLst.comboProcurementHeads == null) {
                                $("#PlannedProcurementID").prop("disabled", true);
                                $("#PlannedProcurement_ID").append('<option value="' + 0 + '">' +
                                    "Please Select Procurement Head" + '</option>');

                            } else {
                                $.each(SubProjectLst.comboProcurementHeads, function (i, Aqib2) {
                                    $("#PlannedProcurement_ID").prop("disabled", false);
                                    $("#PlannedProcurement_ID").append('<option value="' + Aqib2.PlannedProcurement + '">' +
                                        Aqib2.ProcrumetHeader + '</option>');
                                });
                            }

                        } else {
                            $("#SubProject_ID").prop("disabled", false);
                            $.each(SubProjectLst.comboSubProjects, function (i, Aqib) {
                                $("#SubProject_ID").append('<option value="' + Aqib.BatchID + '">' +
                                    Aqib.SubProjectName + '</option>');
                            });

                            if (SubProjectLst.comboProcurementHeads.length > 1)
                            {
                                $.each(SubProjectLst.comboProcurementHeads, function (i, Aqib2) {
                                    $("#PlannedProcurement_ID").prop("disabled", false);
                                    $("#PlannedProcurement_ID").append('<option value="' + Aqib2.PlannedProcurementID + '">' +
                                        Aqib2.ProcrumetHeader + '</option>');
                                });
                            }

                        }
                        debugger;
                        //RemainingVaues

                        $("#PlannedProcrumentNo").val('');
                        $("#lblRemainingProcurement").text(response.remainingValues.RemainingProcurement);
                        $("#hdnRemainingProcurement").val(response.remainingValues.RemainingProcurement); //Hidden
                 },
                 error: function (ex) {
                     console.log('Failed to Retrieve Batch Data:  ' + ex);
                 }
                });//Ajax_End



        });
        @*$("#SubProject_ID").on('change', function () {

            var obj = {};
            obj.Project_ID = $("#Project_ID").find("option:selected").val();
            obj.SubProject_ID = $("#SubProject_ID").find("option:selected").val();

            //var Stock = { Project_ID: $("#Project_ID").find("option:selected").val(), Batch_ID: $("#Batch_ID").find("option:selected").val() };
                $.ajax({
                     type: 'POST',
                     url: '@Url.Action("ClickBatchComboBox", "Common")',
                    data: JSON.stringify(obj),
                    contentType: 'application/json; charset=utf-8',
                    dataType: 'json',

                    success: function (ProcurementHeadLst) {
                        debugger;
                        $("#PlannedProcurement_ID").empty();
                        if (ProcurementHeadLst.length <= 1 || ProcurementHeadLst == null) {
                            $("#PlannedProcurement_ID").prop("disabled", true);
                            $("#PlannedProcurement_ID").append('<option value="' + 0 + '">' +
                                "Please Select Procurement Head" + '</option>');
                        } else {
                            $("#PlannedProcurement_ID").prop("disabled", false);
                            $.each(ProcurementHeadLst, function (i, Aqib) {
                                $("#PlannedProcurement_ID").append('<option value="' + Aqib.PlannedProcurementID + '">' +
                                    Aqib.ProcrumetHeader + '</option>');
                            });
                        }
                        debugger;
                        //RemainingVaues

                        $("#PlannedProcrumentNo").val('');
                        $("#lblRemainingProcurement").text(response.remainingValues.RemainingProcurement);
                        $("#hdnRemainingProcurement").val(response.remainingValues.RemainingProcurement); //Hidden
                 },
                    error: function (ex) {
                        console.log('Failed to Retrieve Indicator Data:  ' + ex.responseText);
                 }
                });//Ajax_End
            });*@
       

        function RemoveDemerits(row) {
            $(row).parent().parent().remove();
        }


    </script>
   
}




